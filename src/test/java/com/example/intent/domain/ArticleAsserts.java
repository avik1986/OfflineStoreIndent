package com.example.intent.domain;

import static com.example.intent.domain.AssertUtils.bigDecimalCompareTo;
import static org.assertj.core.api.Assertions.assertThat;

public class ArticleAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArticleAllPropertiesEquals(Article expected, Article actual) {
        assertArticleAutoGeneratedPropertiesEquals(expected, actual);
        assertArticleAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArticleAllUpdatablePropertiesEquals(Article expected, Article actual) {
        assertArticleUpdatableFieldsEquals(expected, actual);
        assertArticleUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArticleAutoGeneratedPropertiesEquals(Article expected, Article actual) {
        assertThat(actual)
            .as("Verify Article auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArticleUpdatableFieldsEquals(Article expected, Article actual) {
        assertThat(actual)
            .as("Verify Article relevant properties")
            .satisfies(a -> assertThat(a.getPrice()).as("check price").usingComparator(bigDecimalCompareTo).isEqualTo(expected.getPrice()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArticleUpdatableRelationshipsEquals(Article expected, Article actual) {
        // empty method
    }
}
