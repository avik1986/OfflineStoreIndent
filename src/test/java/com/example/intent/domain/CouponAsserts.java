package com.example.intent.domain;

import static com.example.intent.domain.AssertUtils.bigDecimalCompareTo;
import static org.assertj.core.api.Assertions.assertThat;

public class CouponAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCouponAllPropertiesEquals(Coupon expected, Coupon actual) {
        assertCouponAutoGeneratedPropertiesEquals(expected, actual);
        assertCouponAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCouponAllUpdatablePropertiesEquals(Coupon expected, Coupon actual) {
        assertCouponUpdatableFieldsEquals(expected, actual);
        assertCouponUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCouponAutoGeneratedPropertiesEquals(Coupon expected, Coupon actual) {
        assertThat(actual)
            .as("Verify Coupon auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCouponUpdatableFieldsEquals(Coupon expected, Coupon actual) {
        assertThat(actual)
            .as("Verify Coupon relevant properties")
            .satisfies(a -> assertThat(a.getText()).as("check text").isEqualTo(expected.getText()))
            .satisfies(a -> assertThat(a.getType()).as("check type").isEqualTo(expected.getType()))
            .satisfies(a -> assertThat(a.getValue()).as("check value").usingComparator(bigDecimalCompareTo).isEqualTo(expected.getValue()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCouponUpdatableRelationshipsEquals(Coupon expected, Coupon actual) {
        // empty method
    }
}
